<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace：该mapper.xml映射文件的唯一标识 -->
<mapper namespace="com.phserv.mapper.StudentMapper">


	<select id="queryStudentById" parameterType="int" resultMap="Student_map" >
		select s.*,c.id cid,c.class_name from t_student s inner join t_class c
		on s.classId = c.id 
		where s.id = #{id} 
	</select>

	<select id="queryStudentByName" parameterType="String" resultMap="Student_map" >
		select s.*,c.id cid,c.class_name from t_student s inner join t_class c
		on s.classId = c.id 
		where s.name = #{name} 
	</select>

	<insert id="addStudent" parameterType="Student">
		insert into student(stuNo,stuName,stuAge) values(#{stuNo},#{stuName},#{stuAge})
	</insert>
	
	<select id="countAll" resultType="int">
		select count(*) from t_student
	</select>
	
	<select id="queryAllClasses" resultType="Classes">
		select * from t_class
	</select>
	<!-- 获取所有的数据 -->
	<select id="queryAll" resultMap="Student_map">
		select s.*,c.id cid,c.class_name from t_student s inner join t_class c
		on s.classId = c.id
	</select>
	<resultMap type="Student" id="Student_map">
		<id column="id" property="id"/>
		<result column="name" property="name"/>
		<result column="pwd" property="pwd"/>
		<result column="stuNum" property="stunum"/>
		<result column="imgUrl" property="imgUrl"/>
		<result column="sex" property="sex"  javaType="Boolean" jdbcType="INTEGER"/>
		<association property="classes" javaType="Classes">
			<id column="cid" property="id"/>
			<result column="class_name" property="class_name"/>
		</association>
	</resultMap>
	
	<!-- 按照id来删除数据 -->
	<delete id="deleteStudentById" parameterType="int">
		delete from t_student where id = #{sid}
	</delete>
	
	<!-- 增加学生,useGeneratedKeys用于JDBC给带有自动递增的主键生成键值，需要引擎支持 -->
	<insert id="saveStudent" parameterType="Student" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
		insert into t_student(name,pwd,stunum,imgUrl,classid,sex) 
		values(#{name},#{pwd},#{stunum},#{imgUrl},#{classes.id},#{sex})
	</insert>
	
	<!-- 更新学生记录 -->
	<update id="updateStudent1" parameterType="Student">
		update t_student 
		set name = #{name},
		pwd = #{pwd},
		stunum = #{stunum},
		imgUrl = #{imgUrl},
		classid = #{classes.id},
		sex = #{sex} 
		where id = #{id}
	</update>
</mapper>